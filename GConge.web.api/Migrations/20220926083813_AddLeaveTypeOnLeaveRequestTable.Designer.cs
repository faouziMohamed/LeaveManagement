// <auto-generated />
using System;
using GConge.web.api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GConge.web.api.Migrations
{
    [DbContext(typeof(GCongeDbContext))]
    [Migration("20220926083813_AddLeaveTypeOnLeaveRequestTable")]
    partial class AddLeaveTypeOnLeaveRequestTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GConge.Models.Models.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Service")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 9, 26, 9, 38, 13, 299, DateTimeKind.Local).AddTicks(6966),
                            LastModifiedBy = "System",
                            LastModifiedDate = new DateTime(2022, 9, 26, 9, 38, 13, 299, DateTimeKind.Local).AddTicks(6972),
                            Service = "IT",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("GConge.Models.Models.Entities.LeaveRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateRequested")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("LeaveTypeId")
                        .HasColumnType("int");

                    b.Property<int>("RequestingEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("RequestingEmployeeId");

                    b.ToTable("LeaveRequests");
                });

            modelBuilder.Entity("GConge.Models.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 9, 26, 9, 38, 13, 299, DateTimeKind.Local).AddTicks(6751),
                            Email = "admin.email@email.com",
                            Firstname = "Admin",
                            LastModifiedBy = "System",
                            LastModifiedDate = new DateTime(2022, 9, 26, 9, 38, 13, 299, DateTimeKind.Local).AddTicks(6813),
                            Lastname = "Admin",
                            Password = new byte[] { 86, 31, 35, 213, 10, 204, 122, 85, 213, 113, 97, 128, 23, 97, 116, 51, 101, 155, 68, 54, 179, 81, 123, 40, 176, 132, 8, 234, 158, 91, 2, 7, 158, 124, 200, 59, 49, 35, 184, 181, 66, 110, 183, 2, 118, 2, 211, 80, 210, 206, 134, 76, 224, 124, 156, 162, 12, 17, 92, 229, 188, 137, 205, 33 },
                            PasswordSalt = new byte[] { 3, 95, 144, 57, 161, 217, 208, 80, 200, 177, 99, 83, 155, 239, 204, 201, 148, 88, 103, 23, 118, 83, 24, 35, 24, 124, 43, 101, 102, 252, 104, 52, 114, 158, 16, 7, 248, 199, 52, 207, 100, 163, 232, 81, 101, 71, 17, 76, 217, 59, 67, 114, 14, 163, 15, 73, 202, 17, 238, 49, 130, 134, 1, 94, 20, 62, 123, 28, 17, 73, 22, 226, 58, 194, 13, 230, 25, 213, 234, 141, 96, 107, 147, 239, 177, 106, 94, 82, 17, 149, 189, 247, 40, 27, 130, 146, 120, 204, 196, 202, 179, 176, 126, 94, 65, 211, 231, 205, 121, 132, 102, 78, 217, 50, 176, 124, 61, 13, 78, 146, 101, 11, 78, 232, 17, 61, 185, 115 },
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("GConge.Models.Models.Entities.Employee", b =>
                {
                    b.HasOne("GConge.Models.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GConge.Models.Models.Entities.LeaveRequest", b =>
                {
                    b.HasOne("GConge.Models.Models.Entities.Employee", "RequestingEmployee")
                        .WithMany()
                        .HasForeignKey("RequestingEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RequestingEmployee");
                });
#pragma warning restore 612, 618
        }
    }
}
