// <auto-generated />
using System;
using GConge.web.api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GConge.web.api.Migrations
{
    [DbContext(typeof(GCongeDbContext))]
    [Migration("20220926084118_RenameLeaveTypeColumn")]
    partial class RenameLeaveTypeColumn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GConge.Models.Models.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Service")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 9, 26, 9, 41, 17, 938, DateTimeKind.Local).AddTicks(4941),
                            LastModifiedBy = "System",
                            LastModifiedDate = new DateTime(2022, 9, 26, 9, 41, 17, 938, DateTimeKind.Local).AddTicks(4947),
                            Service = "IT",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("GConge.Models.Models.Entities.LeaveRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateRequested")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LeaveType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RequestingEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("RequestingEmployeeId");

                    b.ToTable("LeaveRequests");
                });

            modelBuilder.Entity("GConge.Models.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 9, 26, 9, 41, 17, 938, DateTimeKind.Local).AddTicks(4739),
                            Email = "admin.email@email.com",
                            Firstname = "Admin",
                            LastModifiedBy = "System",
                            LastModifiedDate = new DateTime(2022, 9, 26, 9, 41, 17, 938, DateTimeKind.Local).AddTicks(4803),
                            Lastname = "Admin",
                            Password = new byte[] { 97, 82, 41, 175, 159, 92, 253, 137, 180, 188, 29, 159, 104, 74, 243, 202, 2, 112, 218, 74, 18, 155, 33, 118, 61, 101, 35, 136, 240, 90, 153, 92, 200, 35, 142, 33, 3, 100, 95, 163, 24, 85, 76, 1, 169, 4, 104, 163, 191, 233, 189, 178, 167, 232, 30, 40, 159, 117, 83, 67, 68, 124, 71, 150 },
                            PasswordSalt = new byte[] { 154, 171, 112, 77, 129, 15, 89, 110, 182, 198, 218, 195, 205, 183, 104, 151, 204, 4, 176, 180, 116, 95, 69, 118, 71, 253, 119, 0, 226, 164, 115, 243, 178, 206, 253, 138, 71, 35, 89, 77, 201, 207, 125, 90, 6, 253, 78, 57, 55, 249, 124, 87, 180, 177, 235, 126, 182, 87, 80, 26, 172, 236, 46, 46, 196, 125, 150, 93, 32, 24, 175, 217, 138, 169, 45, 193, 156, 54, 254, 196, 76, 147, 205, 229, 158, 47, 247, 188, 198, 43, 83, 248, 151, 71, 15, 213, 45, 189, 248, 247, 11, 12, 91, 30, 30, 3, 255, 241, 191, 90, 106, 249, 239, 45, 34, 102, 140, 228, 137, 2, 222, 190, 197, 195, 132, 67, 148, 253 },
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("GConge.Models.Models.Entities.Employee", b =>
                {
                    b.HasOne("GConge.Models.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GConge.Models.Models.Entities.LeaveRequest", b =>
                {
                    b.HasOne("GConge.Models.Models.Entities.Employee", "RequestingEmployee")
                        .WithMany()
                        .HasForeignKey("RequestingEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RequestingEmployee");
                });
#pragma warning restore 612, 618
        }
    }
}
