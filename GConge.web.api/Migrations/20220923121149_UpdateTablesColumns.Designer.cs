// <auto-generated />
using System;
using GConge.web.api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GConge.web.api.Migrations
{
    [DbContext(typeof(GCongeDbContext))]
    [Migration("20220923121149_UpdateTablesColumns")]
    partial class UpdateTablesColumns
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GConge.Models.Models.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Service")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("GConge.Models.Models.Entities.LeaveRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateRequested")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("RequestingEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("RequestingEmployeeId");

                    b.ToTable("LeaveRequests");
                });

            modelBuilder.Entity("GConge.Models.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 9, 23, 13, 11, 49, 204, DateTimeKind.Local).AddTicks(4789),
                            Email = "admin.email@email.com",
                            Firstname = "Admin",
                            LastModifiedBy = "System",
                            LastModifiedDate = new DateTime(2022, 9, 23, 13, 11, 49, 204, DateTimeKind.Local).AddTicks(4835),
                            Lastname = "Admin",
                            Password = new byte[] { 219, 18, 134, 151, 151, 205, 177, 211, 216, 171, 69, 213, 11, 111, 111, 183, 154, 235, 209, 222, 192, 142, 239, 148, 78, 87, 69, 173, 2, 252, 110, 1, 132, 246, 153, 85, 82, 176, 204, 130, 228, 77, 60, 144, 42, 92, 136, 53, 146, 120, 166, 230, 1, 199, 199, 43, 234, 187, 149, 27, 218, 201, 165, 146 },
                            PasswordSalt = new byte[] { 8, 6, 110, 41, 240, 223, 250, 155, 152, 25, 131, 72, 89, 96, 126, 176, 23, 143, 89, 127, 40, 53, 60, 244, 11, 53, 45, 201, 1, 67, 103, 220, 149, 164, 100, 19, 219, 195, 206, 65, 232, 199, 173, 213, 199, 188, 175, 70, 36, 54, 215, 230, 220, 85, 10, 112, 219, 189, 105, 34, 107, 175, 205, 250, 29, 234, 197, 78, 167, 71, 140, 40, 20, 35, 41, 106, 1, 218, 162, 249, 58, 94, 94, 96, 6, 184, 205, 35, 122, 65, 238, 226, 38, 178, 214, 90, 218, 85, 54, 244, 67, 8, 112, 17, 115, 164, 136, 110, 217, 118, 236, 121, 176, 130, 120, 76, 56, 132, 46, 238, 76, 175, 63, 202, 91, 200, 22, 185 },
                            PhoneNumber = "+212123456789",
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("GConge.Models.Models.Entities.Employee", b =>
                {
                    b.HasOne("GConge.Models.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GConge.Models.Models.Entities.LeaveRequest", b =>
                {
                    b.HasOne("GConge.Models.Models.Entities.Employee", "RequestingEmployee")
                        .WithMany()
                        .HasForeignKey("RequestingEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RequestingEmployee");
                });
#pragma warning restore 612, 618
        }
    }
}
